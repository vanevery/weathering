The Weathering JSON (JavaScript Object Notation) file defines how audio files exist in relation to geo physical space.  

The JSON file should include an array (with a starting "[" and an ending "]" of defined objects defined with a starting "{" and an ending "}"

[
{...},
{...},
{...},
]

All objects have a set of properties/attributes:

	"type": "region", "point", "path", or "algopath" see below (required)
	"lat": 42.338879 is the starting or midpoint latitude (required)
	"lng": -71.097781 is the starting or midpoint longitude (required)
	"label": "region name" is the name of the region (required)
	"audio": "https://server/path/to/audio.mp3" is a URL to an audio file to play, should be https (required)
	"volume": 0-1 is the starting volume (required)
	"fadeintime": 0-10000 time in milliseconds (1000 is 1 second) to fade in, only works when "distancefade" is false.
	"fadeouttime": 0-10000 time in milliseconds (1000 is 1 second) to fade out, only works when "distancefade" is false.
	"probability": 0-100 the probability that an audio file will be triggered to play (0 to 100) (default value is 100)
**** WORK IN PROGRESS **** 	"distancefade": true/false this tells the software to do a fade based on distance rather than time.  Only works on points, paths, and algopaths. (Note: Currently doesn't interoperate with probabilities, if you say "true" it will disregard probabilities.  Also, currently only works on "fadetype" "lowpass" not "volume".)
	"fadetype": "volume", "lowpass"  the type of fade-in and fade-out to do (required)
	"frequencymin": 0-32000 the min value for a "lowpass" "fadetype" (required for "fadetype": "lowpass")
	"frequencymax": 0-32000 the max value for a "lowpass" "fadetype"  (required for "fadetype": "lowpass")
	"maxdistance": ".001" - "10.000" distance in kilometers for a "point", "path", or "algopath" to play.  A radius.  (required for point, path, or algopath)
	"bounds": [{"lat": 42.338879, "lng": -71.097781}, {"lat": 42.338879, "lng": -71.097781}, {"lat": 42.338879, "lng": -71.097781}] An array of lat, lng objects specifying the bounds of a polygon for a "type": "region". (Required for region)
	"path": [ {"lat":42.340656,"lng":-71.097931} , {"lat":42.340775,"lng":-71.097776} , {"lat":42.340882,"lng":-71.097647}]  An array of lat, lng objects specifying the path that a point will travel along (Required for path)
	"speed": 10000 (delay in milliseconds) speed to move from one point to the next along a "path" or "algopath" (Required for path or algopath)
	"lat_formula" and "lng_formula": "-71.097931 + (0.000017 * (new Date().getSeconds()))" is JavaScript code for an "algopath" which defines it's current position.  (Required for algopath)
		
	Example:
	[
	{"type": "region", "lat": 42.338879, "lng": -71.097781, "label": "label", "audio": "http://server/path/to/audio.mp3", "volume": 0, "fadeintime": 1000, "fadeouttime": 1000, "probability": 100},
	]

type
		
There are several different "type" of objects:

region

	A "region" has a an array of latitude and longitude "bounds" that define a polygon within which an audio file will play:

	{"type": "region", "lat": 42.341813, "lng": -71.095947, "label": "Region 1", "audio": "http://server/path/to/audio.mp3", "bounds": [{"lat": 42.340275, "lng": -71.100039}, {"lat": 42.339799, "lng": -71.100597}, {"lat": 42.338356, "lng": -71.09798}], "volume": 0, "fadeintime": 1000, "fadeouttime": 1000}


point

	A point is a single point with a "maxdistance" or radius in kilometers
	
	{"type": "point", "lat": 42.338879, "lng": -71.097781, "maxdistance": ".01", "label": "label", "audio": "http://server/path/to/audio.mp3", "volume": 0, "fadeintime": 1000, "fadeouttime": 1000, "probability": 100}

path

	A path defines a moving point with a "path" that is an array of individual "lat", "lng" points that defines the path and a "speed" which determines how long it takes to move from point to point in milliseconds.
	
	(Note: At the moment the point is not interpolated between points, rather it jumps from one coordinate to the next at the "speed".)
	
	{"type": "path", "probability": 100, "maxdistance": ".01", "speed": 10000, "lat":42.340656, "lng":-71.097931, "label": "Label", "audio": "http://server/path/to/audio.mp3", "path": [ {"lat":42.340656,"lng":-71.097931} , {"lat":42.340775,"lng":-71.097776} , {"lat":42.340882,"lng":-71.097647}], "volume": 0, "fadeintime": 250, "fadeouttime": 250}


algopath

	An algopath defines a path but instead of fixed points there is a "lat_formula" and a "lng_formula" to define the position.  These formulas are written in JavaScript.
	
	{"type": "algopath", "probability": 100, "maxdistance": ".01", "speed": 1000, "lat_formula": "42.340656", "lng_formula": "-71.097931 + (0.000017 * (new Date().getSeconds()))", "lat": 42.340656, "lng": -71.097931, "label": "Label", "audio": "http://server/path/to/audio.mp3", "volume": 0, "fadeintime": 250, "fadeouttime": 250}


Here is what a complete JSON file would look like:

[
	{"type": "region", "lat": 42.341813, "lng": -71.095947, "label": "Region 1", "audio": "http://server/path/to/audio.mp3", "bounds": [{"lat": 42.340275, "lng": -71.100039}, {"lat": 42.339799, "lng": -71.100597}, {"lat": 42.338356, "lng": -71.09798}], "volume": 0, "fadeintime": 1000, "fadeouttime": 1000},
	{"type": "region", "lat": 42.341890, "lng": -71.095947, "label": "Region 1", "audio": "http://server/path/to/audio.mp3", "bounds": [{"lat": 42.340275, "lng": -71.100039}, {"lat": 42.339799, "lng": -71.100597}, {"lat": 42.338356, "lng": -71.09798}], "volume": 0, "fadeintime": 1000, "fadeouttime": 1000},
	{"type": "path", "probability": 100, "maxdistance": ".01", "speed": 10000, "lat":42.340656, "lng":-71.097931, "label": "Label", "audio": "http://server/path/to/audio.mp3", "path": [{"lat":42.340656, "lng":-71.097931}, {"lat":42.340775, "lng":-71.097776}, {"lat":42.340882, "lng":-71.097647}], "volume": 0, "fadeintime": 250, "fadeouttime": 250},
	{"type": "algopath", "probability": 50, "maxdistance": ".01", "speed": 1000, "lat_formula": "42.340656", "lng_formula": "-71.097931 + (0.00001 * (new Date().getSeconds()))", "lat": 42.340656, "lng": -71.097931, "label": "Label", "audio": "http://server/path/to/audio.mp3", "volume": 0, "fadeintime": 250, "fadeouttime": 250},
	{"type": "point", "lat": 42.338890, "lng": -71.097781, "maxdistance": ".01", "label": "label", "audio": "http://server/path/to/audio.mp3", "volume": 0, "fadeintime": 1000, "fadeouttime": 1000, "probability": 100},
	{"type": "point", "lat": 42.338879, "lng": -71.097781, "maxdistance": ".01", "label": "label", "audio": "http://server/path/to/audio.mp3", "volume": 0, "fadeintime": 1000, "fadeouttime": 1000, "probability": 100}
]

It's always a good idea to make sure the JSON is valid by running it through a validator such as http://jsonlint.com/
